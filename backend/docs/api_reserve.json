/**
    servers: [
        {
        url: 'http://localhost:3000/',
        description: 'React App'
        },
        {
        url: 'http://localhost:4242/',
        description: 'Node Backend'
        }
    ],
    tags: [
        {
        name: 'CRUD operations'
        }
    ],
      paths: {
        '/users': {
          get: {
            tags: ['CRUD operations'],
            description: 'Get users',
            operationId: 'getUsers',
            parameters: [
              {
                name: 'x-company-id',
                in: 'header',
                schema: {
                  $ref: '#/models/user'
                },
                required: true,
                description: 'Company id where the users work'
              },
              {
                name: 'page',
                in: 'query',
                schema: {
                  type: 'integer',
                  default: 1
                },
                required: false
              },
              {
                name: 'orderBy',
                in: 'query',
                schema: {
                  type: 'string',
                  enum: ['asc', 'desc'],
                  default: 'asc'
                },
                required: false
              }
            ],
            responses: {
              '200': {
                description: 'Users were obtained',
                content: {
                  'application/json': {
                    schema: {
                      $ref: '#/components/schemas/Users'
                    }
                  }
                }
              },
              '400': {
                description: 'Missing parameters',
                content: {
                  'application/json': {
                    schema: {
                      $ref: '#/components/schemas/Error'
                    },
                    example: {
                      message: 'companyId is missing',
                      internal_code: 'missing_parameters'
                    }
                  }
                }
              }
            }
          }
        }
      },
      paths: {
        '/users': {
          post: {
            tags: ['CRUD operations'],
            description: 'Create users',
            operationId: 'createUsers',
            parameters: [],
            requestBody: {
              content: {
                'application/json': {
                  schema: {
                    $ref: '#/components/schemas/Users'
                  }
                }
              },
              required: true
            },
            responses: {
              '200': {
                description: 'New users were created'
              },
              '400': {
                description: 'Invalid parameters',
                content: {
                  'application/json': {
                    schema: {
                      $ref: '#/components/schemas/Error'
                    },
                    example: {
                      message: 'User identificationNumbers 10, 20 already exist',
                      internal_code: 'invalid_parameters'
                    }
                  }
                }
              }
            }
          }
        }
      },
      */